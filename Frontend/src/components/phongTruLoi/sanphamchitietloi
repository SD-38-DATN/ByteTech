<template>
  <header class="shopee-header px-5 py-3">
    <div class="d-flex justify-content-between align-items-center top-bar mb-2 flex-wrap py-2"
      style="font-size: 1.05rem; font-weight: 500;">
      <div class="d-flex align-items-center gap-3 flex-wrap text-white">
        <a href="#" class="text-white text-decoration-none">
          <i class="bi bi-shop-window me-1"></i> K√™nh Ng∆∞·ªùi B√°n
        </a>
        <a href="#" class="text-white text-decoration-none">
          <i class="bi bi-cloud-arrow-down me-1"></i> T·∫£i ·ª©ng d·ª•ng
        </a>
        <span class="mx-2">|</span>
        <span>K·∫øt n·ªëi:</span>
        <a href="#" class="text-white fs-5"><i class="bi bi-facebook"></i></a>
        <a href="#" class="text-white fs-5"><i class="bi bi-instagram"></i></a>
        <a href="#" class="text-white fs-5"><i class="bi bi-tiktok"></i></a>
        <a href="#" class="text-white fs-5"><i class="bi bi-youtube"></i></a>
      </div>
      <div class="d-flex align-items-center gap-3 flex-wrap text-white">
        <a href="#" class="text-white text-decoration-none">
          <i class="bi bi-bell-fill me-1"></i> Th√¥ng b√°o
        </a>
        <a href="#" class="text-white text-decoration-none">
          <i class="bi bi-question-circle-fill me-1"></i> H·ªó tr·ª£
        </a>
        <div class="text-white">
          <i class="bi bi-translate me-1"></i> Ti·∫øng Vi·ªát
        </div>
        <div class="d-flex align-items-center gap-3 flex-wrap text-white">
          <div class="dropdown" v-if="token">
            <a href="#" class="fw-bold text-white text-decoration-none dropdown-toggle d-flex align-items-center"
              id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
              <img :src="avatarUrl" alt="Avatar" class="rounded-circle me-2 user-avatar">
              <span>{{ tenHienThi }}</span>
            </a>
            <ul class="dropdown-menu dropdown-menu-end shadow-lg border-0 rounded-3 p-2"
              aria-labelledby="userDropdown">
              <li>
                <h6 class="dropdown-header text-muted text-truncate">
                  Ch√†o m·ª´ng, {{ tenHienThi }}!
                </h6>
              </li>
              <li>
                <hr class="dropdown-divider my-1" />
              </li>
              <li>
                <router-link to="/me" class="dropdown-item rounded-2">
                  <i class="bi bi-person-circle me-2"></i> T√†i kho·∫£n c·ªßa t√¥i
                </router-link>
              </li>
              <li>
                <router-link to="/donhang" class="dropdown-item rounded-2">
                  <i class="bi bi-box-seam me-2"></i> ƒê∆°n mua
                </router-link>
              </li>
              <li>
                <a class="dropdown-item rounded-2" href="#">
                  <i class="bi bi-heart me-2"></i> S·∫£n ph·∫©m y√™u th√≠ch
                </a>
              </li>
              <li v-if="role === 'admin'">
                <hr class="dropdown-divider my-1" />
                <router-link to="/duyet-don" class="dropdown-item rounded-2">
                  <i class="bi bi-speedometer2 me-2"></i> Trang qu·∫£n tr·ªã
                </router-link>
              </li>
              <li>
                <hr class="dropdown-divider my-1" />
              </li>
              <li>
                <a class="dropdown-item rounded-2 text-danger" href="#" @click="handleAuth">
                  <i class="bi bi-box-arrow-right me-2"></i> ƒêƒÉng xu·∫•t
                </a>
              </li>
            </ul>
          </div>
          <div v-else class="d-flex align-items-center">
            <router-link to="/dang-ky" class="btn text-white me-2">ƒêƒÉng k√Ω</router-link>
            <router-link to="/login" class="btn btn-warning text-dark fw-bold rounded-1">ƒêƒÉng nh·∫≠p</router-link>
          </div>
        </div>
      </div>
    </div>
    <div class="d-flex justify-content-between align-items-center flex-wrap">
      <a href="#" class="brand text-white text-decoration-none fs-3 fw-bold d-flex align-items-center gap-2">
        <span class="logo-placeholder"></span> Shopee Mini
      </a>
      <form action="#" method="get" class="d-flex flex-grow-1 mx-4 search-form" style="max-width: 800px;">
        <input type="text" name="tenSanPham" class="form-control me-2 rounded-1 shadow-sm"
          placeholder="üîç T√¨m ki·∫øm s·∫£n ph·∫©m" />
        <button class="btn btn-light rounded-1 px-4 fw-bold" type="submit">T√¨m</button>
      </form>
      <div class="d-flex align-items-center gap-4 text-white fs-5">
        <a href="#" class="text-white position-relative hover-link">
          <i class="bi bi-heart"></i>
        </a>
        <router-link to="/giohang" class="text-white position-relative hover-link">
          <i class="bi bi-cart3"></i>
          <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-warning text-dark">
            {{ cartItemCount }}
          </span>
        </router-link>
        <button class="btn btn-outline-light" @click="$router.push('/giohang')">
          Xem gi·ªè h√†ng
        </button>
        <a href="#" class="text-white hover-link"><i class="bi bi-gear-fill"></i></a>
      </div>
    </div>
  </header>

  <!-- Feedback Success Toast -->
  <div v-if="showFeedbackSuccessToast" class="feedback-success-toast">
    <div class="toast-icon">
      <i class="bi bi-check-circle-fill"></i>
    </div>
    <div class="toast-content">
      <h4>G·ª≠i ƒë√°nh gi√° th√†nh c√¥ng!</h4>
      <p>C·∫£m ∆°n b·∫°n ƒë√£ chia s·∫ª tr·∫£i nghi·ªám.</p>
    </div>
    <div class="toast-timer"></div>
  </div>

  <div class="container mt-4" v-if="sanPham">
    <div class="back-btn mt-3">
      <router-link to="/" class="btn btn-outline-dark">‚Üê Quay l·∫°i trang ch·ªß</router-link>
    </div>
    <br></br>

    <!-- Product Information -->
    <div class="row product-box">
      <div class="col-md-5 text-center">
        <img :src="mainImage" class="main-image" alt="·∫¢nh ch√≠nh" />
        <div>
          <img v-for="(img, index) in thumbnails" :key="index" :src="img" class="thumbnail-img"
            :class="{ active: img === mainImage }" @click="changeImage(img)" />
        </div>
      </div>
      <div class="col-md-7">
        <h3 class="mb-3 text-uppercase text-primary">{{ sanPham.tenSanPham }}</h3>
        
        <div class="product-price-new">
          <span v-if="selectedVariant">
            <span class="price-label-new">Gi√° s·∫£n ph·∫©m</span>
            <div class="price-values-new">
              <span class="discounted-price-new">
                {{ selectedVariant.gia.toLocaleString() + ' ƒë' }}
              </span>
              <span v-if="selectedVariant.maKhuyenMai" class="original-price-new">
                {{ selectedVariant.giaKhongKhuyenMai.toLocaleString() + ' ƒë' }}
              </span>
            </div>
          </span>
          <span v-else class="price-placeholder-new">
            Vui l√≤ng ch·ªçn thu·ªôc t√≠nh
          </span>
        </div>

        <div class="mb-2">
          <span class="section-title">üì¶ M√£ SKU:</span>
          <span>{{ selectedVariant ? selectedVariant.maSKU : '---' }}</span>
        </div>
        <div class="mb-3">
          <span class="section-title">üìä T·ªìn kho:</span>
          <span>{{ selectedVariant ? selectedVariant.soLuong : '---' }}</span>
        </div>
        
        <!-- Product Attributes -->
        <div v-for="(options, key) in attributes" :key="key" class="mb-3">
          <label class="form-label fw-semibold">{{ key }}</label>
          <div>
            <button v-for="value in options" :key="value" type="button" class="thuoc-tinh-btn" :class="{
              selected: selectedValues[key] === value,
              readonly: !isOptionAvailable(key, value)
            }" @click="selectAttribute(key, value)">
              {{ value }}
            </button>
          </div>
          <small class="text-muted">ƒê√£ ch·ªçn: <span>{{ selectedValues[key] || '---' }}</span></small>
        </div>
        
        <div class="reset-btn">
          <button type="button" class="btn btn-outline-secondary btn-sm" @click="resetSelection">
            üóò Ch·ªçn l·∫°i bi·∫øn th·ªÉ
          </button>
        </div>
        
        <!-- Quantity Selection -->
        <div class="mb-3 mt-3">
          <label class="form-label">S·ªë l∆∞·ª£ng:</label>
          <div class="input-group">
            <button type="button" class="btn btn-outline-secondary" @click="changeQuantity(-1)">-</button>
            <input type="number" v-model.number="quantity" min="1" class="form-control text-center" readonly />
            <button type="button" class="btn btn-outline-secondary" @click="changeQuantity(1)">+</button>
          </div>
        </div>
        
        <button type="button" class="btn btn-danger w-100" @click="buyNow">üõí Th√™m v√†o gi·ªè h√†ng</button>
      </div>
    </div>

    <!-- Technical Specifications and Accessories -->
    <div class="row mt-4">
      <div class="col-md-6" v-if="sanPham.loaiThongSoList && sanPham.loaiThongSoList.length > 0">
        <div class="thong-so-box">
          <h4 class="section-title">‚öôÔ∏è Th√¥ng s·ªë k·ªπ thu·∫≠t</h4>
          <div v-if="sanPham.loaiThongSoList.length > 0">
            <div v-for="loai in sanPham.loaiThongSoList" :key="loai.id" class="mb-4">
              <table class="table table-bordered align-middle thong-so-table">
                <tbody>
                  <!-- ‚úÖ Ch·ªâ l·∫•y tr·∫°ng th√°i = 1 v√† gi·ªõi h·∫°n 3 d√≤ng -->
                  <tr v-for="(ts, idx) in loai.thongSoList.filter(ts => ts.trangThai === 1).slice(0, 3)" :key="idx">
                    <td class="w-25 bg-light fw-semibold">{{ ts.tenThongSo }}</td>
                    <td>{{ ts.giaTriThongSo }}</td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
          <button class="btn btn-outline-primary" type="button" data-bs-toggle="offcanvas"
            data-bs-target="#offcanvasThongSo">
            Xem t·∫•t c·∫£ th√¥ng s·ªë
          </button>
        </div>
      </div>

      <!-- Offcanvas hi·ªÉn th·ªã to√†n b·ªô th√¥ng s·ªë -->
      <div class="offcanvas offcanvas-end offcanvas-40" tabindex="-1" id="offcanvasThongSo" aria-labelledby="offcanvasThongSoLabel">
        <div class="offcanvas-header">
          <h5 id="offcanvasThongSoLabel">üìë T·∫•t c·∫£ th√¥ng s·ªë k·ªπ thu·∫≠t</h5>
          <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="ƒê√≥ng"></button>
        </div>
        <div class="offcanvas-body">
          <div v-for="loai in sanPham.loaiThongSoList" :key="loai.id" class="mb-4">
            <h6 class="fw-bold">{{ loai.tenLoai }}</h6>
            <table class="table table-bordered align-middle thong-so-table">
              <tbody>
                <tr v-for="(ts, idx) in loai.thongSoList" :key="idx">
                  <td class="w-25 bg-light fw-semibold">{{ ts.tenThongSo }}</td>
                  <td>{{ ts.giaTriThongSo }}</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>

      <div class="col-md-6" v-if="sanPham.phuKienList && sanPham.phuKienList.length > 0">
        <div class="phu-kien-box">
          <h4 class="section-title">üéÅ Ph·ª• ki·ªán ƒëi k√®m</h4>
          <div class="row g-3">
            <div v-for="pk in sanPham.phuKienList" :key="pk.maPhuKien" class="col-6">
              <div class="phu-kien-item-card" @click="openPhuKienModal(pk)">
                <img src="https://placehold.co/250x150/667eea/ffffff?text=Phu+Kien" class="card-image" alt="Ph·ª• ki·ªán">
                <div class="card-content">
                  <h5 class="card-title">{{ pk.tenPhuKien }}</h5>
                  <p class="card-price" v-if="pk.bienTheList && pk.bienTheList.length > 0">
                    Gi√°: {{ pk.bienTheList[0].gia.toLocaleString() }} ƒë
                  </p>
                  <p class="card-price" v-else>
                    Gi√°: Li√™n h·ªá
                  </p>
                  <div class="card-actions mt-2">
                    <router-link 
                      :to="`/phukien/${pk.maPhuKien}`" 
                      class="btn btn-sm btn-outline-primary"
                      @click.stop 
                    >
                      Xem chi ti·∫øt
                    </router-link>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Feedback Section -->
    <div class="feedback-box mt-4">
      <h4 class="section-title">üí¨ ƒê√°nh gi√° s·∫£n ph·∫©m</h4>
      <div class="mb-3">
        <span v-if="feedbacks.length > 0" class="fw-bold text-warning">
          ‚≠ê {{ averageRating.toFixed(1) }} / 5 ({{ feedbacks.length }} l∆∞·ª£t ƒë√°nh gi√°)
        </span>
        <span v-else class="text-muted">Ch∆∞a c√≥ ƒë√°nh gi√°</span>
      </div>
      <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#feedbackModal">
        ‚ûï T·∫°o ƒë√°nh gi√°
      </button>
      <div v-if="feedbacks.length > 0">
        <div v-for="fb in displayedFeedbacks" :key="fb.id" class="feedback-item">
          <p>
            <strong>{{ fb.tenHienThi }}</strong> -
            <span class="text-warning">{{ "‚≠ê".repeat(fb.danhGia) }}</span>
          </p>
          <p>{{ fb.noiDung }}</p>
          <small class="text-muted">{{ formatDate(fb.ngayDanhGia) }}</small>
          <div>
            <button v-if="isMyFeedback(fb)" class="btn btn-sm btn-outline-danger mt-1" @click="deleteFeedback(fb.id)">
              X√≥a
            </button>
          </div>
          <hr />
        </div>
        <div v-if="feedbacks.length > initialFeedbackCount" class="text-center mt-3">
          <button v-if="visibleFeedbacksCount < feedbacks.length" class="btn btn-sm btn-outline-primary me-2"
            @click="loadMoreFeedbacks">
            Xem th√™m ƒë√°nh gi√°
          </button>
          <button v-if="visibleFeedbacksCount > initialFeedbackCount" class="btn btn-sm btn-outline-secondary"
            @click="collapseFeedbacks">
            Thu g·ªçn
          </button>
        </div>
      </div>
      <p v-else>Ch∆∞a c√≥ ƒë√°nh gi√° n√†o cho s·∫£n ph·∫©m n√†y.</p>
    </div>

    <!-- ‚úÖ SECTION S·∫¢N PH·∫®M LI√äN QUAN WITH CAROUSEL -->
    <div v-if="sanPhamLienQuan.length > 0" class="related-products-section mt-5">
      <div class="section-header">
        <h4 class="section-title mb-4">üîó S·∫£n ph·∫©m li√™n quan</h4>
        
        <!-- Navigation Controls -->
        <div class="carousel-controls" v-if="totalPages > 1">
          <button 
            class="carousel-btn prev-btn" 
            @click="prevPage"
            :disabled="currentPage === 0"
            :class="{ disabled: currentPage === 0 }"
          >
            <i class="bi bi-chevron-left"></i>
          </button>
          
          <div class="page-indicator">
            <span class="current-page">{{ currentPage + 1 }}</span>
            <span class="separator">/</span>
            <span class="total-pages">{{ totalPages }}</span>
          </div>
          
          <button 
            class="carousel-btn next-btn" 
            @click="nextPage"
            :disabled="currentPage === totalPages - 1"
            :class="{ disabled: currentPage === totalPages - 1 }"
          >
            <i class="bi bi-chevron-right"></i>
          </button>
        </div>
      </div>
      
      <!-- Loading state -->
      <div v-if="isLoadingSanPhamLienQuan" class="text-center py-4">
        <div class="spinner-border text-primary" role="status">
          <span class="visually-hidden">ƒêang t·∫£i...</span>
        </div>
      </div>

      <!-- Error state -->
      <div v-else-if="sanPhamLienQuanError" class="alert alert-warning">
        {{ sanPhamLienQuanError }}
      </div>

      <!-- Products Carousel -->
      <div v-else class="products-carousel-container">
        <div class="products-carousel" :style="carouselStyle">
          <div 
            v-for="(pageProducts, pageIndex) in paginatedProducts" 
            :key="pageIndex"
            class="carousel-page"
          >
            <div class="product-grid">
              <router-link
                v-for="p in pageProducts"
                :key="p.maSanPham"
                :to="{ name: 'SanPhamChiTiet', params: { id: p.maSanPham } }"
                class="product-card position-relative"
              >
                <!-- ‚úÖ Badge khuy·∫øn m√£i g√≥c tr√°i ngo√†i ·∫£nh -->
                <div 
                  v-if="p.giaBienThe && p.loaiGiam === 1" 
                  class="discount-badge"
                >
                  Gi·∫£m {{ Math.round(p.giaTriGiamKhuyenMai * 100) }}%
                </div>
                <div 
                  v-else-if="p.giaBienThe && p.loaiGiam === 0" 
                  class="discount-badge"
                >
                  -{{ p.giaTriGiamKhuyenMai.toLocaleString() }}ƒë
                </div>

                <div class="product-image">
                  <img 
                    :src="`/images/products/${p.maSanPham}.jpg`"
                    :alt="p.tenSanPham" 
                    class="img-fluid"
                    @error="handleImageError($event)"
                  />
                </div>

                <div class="product-name">{{ p.tenSanPham }}</div>
                <div class="product-desc">{{ p.moTa }}</div>
                <div class="product-desc">S·ªë l∆∞·ª£ng: <span>{{ p.soLuong }}</span></div>

                <!-- Gi√° -->
                <div v-if="p.giaBienThe" class="product-price">
                  <!-- N·∫øu gi√° g·ªëc = gi√° sau KM th√¨ ch·ªâ hi·ªÉn th·ªã 1 gi√° -->
                  <span v-if="p.giaKhongKhuyenMaiBienThe === p.giaBienThe" class="text-danger fw-bold">
                    {{ p.giaBienThe.toLocaleString() }} ƒë
                  </span>

                  <!-- N·∫øu gi√° kh√°c nhau th√¨ hi·ªÉn th·ªã gi√° sau KM + gi√° g·ªëc g·∫°ch -->
                  <template v-else>
                    <span class="text-danger fw-bold">
                      {{ p.giaBienThe.toLocaleString() }} ƒë
                    </span>
                    <span class="text-muted text-decoration-line-through ms-2 small">
                      {{ p.giaKhongKhuyenMaiBienThe.toLocaleString() }} ƒë
                    </span>
                  </template>
                </div>

                <!-- fallback n·∫øu ch∆∞a c√≥ bi·∫øn th·ªÉ -->
                <div v-else class="product-price">
                  {{ p.gia.toLocaleString() }} ƒë
                </div>

                <div class="product-category">
                  Danh m·ª•c: <span>{{ p.tenDanhMuc }}</span>
                </div>
                <div class="text-muted small mt-2">üëÜ Xem chi ti·∫øt</div>
              </router-link>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Feedback Modal -->
    <div class="modal fade" id="feedbackModal" tabindex="-1" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">‚úçÔ∏è Th√™m ƒë√°nh gi√°</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="ƒê√≥ng"></button>
          </div>
          <div class="modal-body">
            <textarea v-model="newFeedback.noiDung" class="form-control" rows="3"
              placeholder="Nh·∫≠p n·ªôi dung ƒë√°nh gi√°..."></textarea>
            <div class="rating-stars mt-3">
              <span v-for="i in 5" :key="i" class="star" :class="{ active: i <= newFeedback.danhGia }"
                @click="newFeedback.danhGia = i">‚òÖ</span>
            </div>
          </div>
          <div class="modal-footer">
            <button class="btn btn-secondary" data-bs-dismiss="modal">ƒê√≥ng</button>
            <button class="btn btn-primary" @click="addFeedback" data-bs-dismiss="modal">G·ª≠i ƒë√°nh gi√°</button>
          </div>
        </div>
      </div>
    </div>

    <!-- Accessory Modal -->
    <div v-if="showPhuKienModal && selectedPhuKien" class="pk-modal-overlay" @click.self="closePhuKienModal">
      <div class="pk-modal-container">
        <div class="pk-modal-content">
          <div class="pk-modal-header">
            <h5 class="pk-modal-title">Ch·ªçn bi·∫øn th·ªÉ ph·ª• ki·ªán</h5>
            <button type="button" class="pk-close-btn" @click="closePhuKienModal">
              <i class="bi bi-x-lg"></i>
            </button>
          </div>
          <div class="pk-modal-body">
            <div class="pk-info-card">
              <img src="https://placehold.co/80x80/667eea/ffffff?text=PK" class="pk-image" alt="Ph·ª• ki·ªán">
              <div class="pk-details">
                <h6 class="pk-name">{{ selectedPhuKien.tenPhuKien }}</h6>
                <div class="pk-price">
                  {{ selectedPhuKienVariant ? selectedPhuKienVariant.gia.toLocaleString() + ' ‚Ç´' : 'Vui l√≤ng ch·ªçn' }}
                </div>
                <div class="pk-stock" v-if="selectedPhuKienVariant">
                  <span v-if="selectedPhuKienVariant.soLuong > 0" class="text-success">
                    <i class="bi bi-check-circle-fill"></i> C√≤n h√†ng
                  </span>
                  <span v-else class="text-danger">
                    <i class="bi bi-x-circle-fill"></i> H·∫øt h√†ng
                  </span>
                </div>
              </div>
            </div>
            
            <div class="pk-attributes-section">
              <div v-for="(options, key) in phuKienAttributes" :key="key" class="pk-attribute-group">
                <label class="pk-attribute-label">{{ key }}</label>
                <div class="pk-attribute-options">
                  <button v-for="value in options" :key="value" type="button" class="pk-attribute-option"
                    :class="{ 'is-selected': selectedPhuKienValues[key] === value }"
                    @click="selectPhuKienAttribute(key, value)">
                    {{ value }}
                  </button>
                </div>
              </div>
            </div>
            
            <div class="pk-quantity-section">
              <label class="pk-quantity-label">S·ªë l∆∞·ª£ng</label>
              <div class="pk-quantity-controls">
                <button type="button" class="pk-quantity-btn" @click="changePhuKienQuantity(-1)"
                  :disabled="phuKienQuantity <= 1">-</button>
                <input type="number" class="pk-quantity-display" v-model.number="phuKienQuantity" readonly>
                <button type="button" class="pk-quantity-btn" @click="changePhuKienQuantity(1)"
                  :disabled="selectedPhuKienVariant && phuKienQuantity >= selectedPhuKienVariant.soLuong">+</button>
              </div>
              <small v-if="selectedPhuKienVariant" class="pk-stock-info">
                C√≤n {{ selectedPhuKienVariant.soLuong }} s·∫£n ph·∫©m
              </small>
            </div>
          </div>
          <div class="pk-modal-footer">
            <button type="button" class="pk-btn-cancel" @click="closePhuKienModal">
              H·ªßy
            </button>
            <button type="button" class="pk-btn-add-cart" @click="buyPhuKienNow"
              :disabled="!selectedPhuKienVariant || selectedPhuKienVariant.soLuong === 0">
              <i class="bi bi-cart-plus"></i>
              <span>Th√™m v√†o gi·ªè h√†ng</span>
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- ‚úÖ FIXED TOAST CONTAINER - Ho√†n to√†n c√≥ th·ªÉ click ƒë∆∞·ª£c -->
    <div class="toast-container-fixed">
      <div v-for="toast in toasts" :key="toast.id" 
           class="add-to-cart-toast-fixed" 
           @click.stop>
        <div class="toast-icon-cart-fixed">
          <i class="bi bi-check-circle-fill"></i>
        </div>
        <div class="toast-content-fixed">
          <h5 class="toast-title-cart-fixed">ƒê√£ th√™m v√†o gi·ªè h√†ng!</h5>
          <div class="toast-actions-fixed">
            <!-- ‚úÖ N√∫t Mua ti·∫øp v·ªõi s·ª± ki·ªán click ho√†n to√†n t√°ch bi·ªát -->
            <button 
              class="btn btn-sm btn-light toast-btn-continue" 
              @click.stop="handleContinueShopping(toast.id)"
              type="button"
            >
              Mua ti·∫øp
            </button>
            <!-- ‚úÖ N√∫t Xem gi·ªè h√†ng v·ªõi s·ª± ki·ªán click ho√†n to√†n t√°ch bi·ªát -->
            <button 
              class="btn btn-sm btn-primary toast-btn-cart" 
              @click.stop="handleViewCart(toast.id)"
              type="button"
            >
              Xem gi·ªè h√†ng
            </button>
          </div>
        </div>
        <button 
          class="toast-close-btn-fixed" 
          @click.stop="handleCloseToast(toast.id)"
          type="button"
        >
          √ó
        </button>
        <div class="toast-timer-bar-fixed"></div>
      </div>
    </div>
  </div>
</template>

<script>
import { ref, reactive, onMounted, computed, watch } from "vue";
import axios from "axios";
import { useRoute, useRouter } from "vue-router";
import { addToCart, validateToken, fetchCart, fetchSanPhamLienQuan } from "../service/api.js";

export default {
  name: "ProductDetail",

  // ‚úÖ Options API cho token/cart/avatar ƒë·ªÉ gi·ªØ t∆∞∆°ng th√≠ch
  data() {
    return {
      token: localStorage.getItem("token"),
      cart: null,
      role: localStorage.getItem("role"),
      avatarUrl: "/images/default-avatar.png",
    };
  },

  computed: {
    tenHienThi() {
      const tk = validateToken();
      if (tk) {
        const ten = localStorage.getItem("tenHienThi");
        const username = localStorage.getItem("username");
        return ten || username || "Kh√°ch";
      }
      return null;
    },
    buttonText() {
      return validateToken() ? "ƒêƒÉng xu·∫•t" : "ƒêƒÉng nh·∫≠p";
    },
    cartItemCount() {
      return this.cart?.chiTietList?.length || 0;
    },
  },

  async mounted() {
    try {
      this.cart = await fetchCart();
    } catch (e) {
      console.error("L·ªói khi t·∫£i gi·ªè h√†ng:", e);
    }
  },

  methods: {
    async handleAuth() {
      if (!this.token) {
        this.$router.push("/login");
        return;
      }
      try {
        localStorage.removeItem("token");
        localStorage.removeItem("role");
        localStorage.removeItem("username");
        localStorage.removeItem("tenHienThi");
        this.token = null;
        this.$router.push("/login");
      } catch (err) {
        console.error("‚ö†Ô∏è L·ªói logout:", err);
      }
    },
    handleImageError(e) {
      e.target.src = "https://placehold.co/400x300/e0e0e0/666666?text=No+Image";
      e.target.alt = "H√¨nh ·∫£nh kh√¥ng kh·∫£ d·ª•ng";
    },
  },

  setup() {
    const route = useRoute();
    const router = useRouter();

    // ============= STATE CH√çNH =============
    const sanPham = ref(null);
    const selectedValues = reactive({});
    const selectedVariant = ref(null);
    const quantity = ref(1);
    const mainImage = ref("https://placehold.co/400x300/e0e0e0/666666?text=Image");
    const thumbnails = ref([]);
    const attributes = ref({});

    const getAccessoryVariantPrice = (bt) => {
  // ∆Øu ti√™n d√πng gi√° khuy·∫øn m√£i n·∫øu c√≥, fallback sang giaKhongKhuyenMai ho·∫∑c gia
  if (typeof bt.gia === 'number' && bt.maKhuyenMai) return bt.gia;
  if (typeof bt.giaKhongKhuyenMai === 'number') return bt.giaKhongKhuyenMai;
  return bt.gia ?? Infinity; // n·∫øu kh√¥ng c√≥ gi√°, coi nh∆∞ r·∫•t l·ªõn ƒë·ªÉ lo·∫°i kh·ªèi min
};

    // ============= S·∫¢N PH·∫®M LI√äN QUAN =============
    const sanPhamLienQuan = ref([]);
    const isLoadingSanPhamLienQuan = ref(false);
    const sanPhamLienQuanError = ref(null);

    // ============= CAROUSEL =============
    const currentPage = ref(0);
    const itemsPerPage = 4;
    const totalPages = computed(() => Math.ceil(sanPhamLienQuan.value.length / itemsPerPage));
    const paginatedProducts = computed(() => {
      const pages = [];
      for (let i = 0; i < sanPhamLienQuan.value.length; i += itemsPerPage) {
        pages.push(sanPhamLienQuan.value.slice(i, i + itemsPerPage));
      }
      return pages;
    });
    const carouselStyle = computed(() => ({
      transform: `translateX(-${currentPage.value * 100}%)`,
      transition: "transform 0.3s ease-in-out",
    }));
    const nextPage = () => {
      if (currentPage.value < totalPages.value - 1) currentPage.value++;
    };
    const prevPage = () => {
      if (currentPage.value > 0) currentPage.value--;
    };

    // ============= FEEDBACK =============
    const feedbacks = ref([]);
    const newFeedback = reactive({ noiDung: "", danhGia: 0 });
    const initialFeedbackCount = 3;
    const visibleFeedbacksCount = ref(initialFeedbackCount);
    const showFeedbackSuccessToast = ref(false);
    const averageRating = computed(() => {
      if (!feedbacks.value.length) return 0;
      const sum = feedbacks.value.reduce((acc, fb) => acc + fb.danhGia, 0);
      return sum / feedbacks.value.length;
    });
    const displayedFeedbacks = computed(() =>
      feedbacks.value.slice(0, visibleFeedbacksCount.value)
    );

    const addFeedback = async () => {
      const token = localStorage.getItem("token");
      if (!newFeedback.noiDung || !newFeedback.danhGia) {
        alert("Vui l√≤ng nh·∫≠p n·ªôi dung v√† ch·ªçn s·ªë sao!");
        return;
      }
      if (!token) {
        alert("B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p!");
        return;
      }
      try {
        await axios.post(
          "http://localhost:8081/api/feedback",
          {
            maSanPham: sanPham.value.maSanPham,
            noiDung: newFeedback.noiDung,
            danhGia: newFeedback.danhGia,
          },
          { headers: { Authorization: `Bearer ${token}` } }
        );
        newFeedback.noiDung = "";
        newFeedback.danhGia = 0;
        await fetchFeedbacksFor(sanPham.value.maSanPham);
        showFeedbackSuccessToast.value = true;
        setTimeout(() => (showFeedbackSuccessToast.value = false), 5000);
      } catch (err) {
        console.error("L·ªói th√™m feedback:", err);
      }
    };

    const deleteFeedback = async (id) => {
      const token = localStorage.getItem("token");
      if (!token) {
        alert("B·∫°n ch∆∞a ƒëƒÉng nh·∫≠p!");
        return;
      }
      if (!confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a ƒë√°nh gi√° n√†y?")) return;
      try {
        await axios.delete(`http://localhost:8081/api/feedback/${id}`, {
          headers: { Authorization: `Bearer ${token}` },
        });
        await fetchFeedbacksFor(sanPham.value.maSanPham);
        alert("‚úÖ X√≥a ƒë√°nh gi√° th√†nh c√¥ng!");
      } catch (err) {
        console.error("L·ªói x√≥a feedback:", err);
      }
    };

    const isMyFeedback = (fb) => {
      const username = localStorage.getItem("username");
      return fb.username === username;
    };
    const formatDate = (dateString) => {
      if (!dateString) return "";
      const d = new Date(dateString);
      return d.toLocaleString("vi-VN");
    };
    const loadMoreFeedbacks = () => (visibleFeedbacksCount.value += 3);
    const collapseFeedbacks = () => (visibleFeedbacksCount.value = initialFeedbackCount);

    // ============= TOAST GI·ªé H√ÄNG =============
    const toasts = ref([]);
    const showSuccessToast = () => {
      const id = Date.now() + Math.random();
      toasts.value.push({ id });
      setTimeout(() => handleCloseToast(id), 8000);
    };
    const handleContinueShopping = (id) => {
      toasts.value = toasts.value.filter((t) => t.id !== id);
    };
    const handleViewCart = (id) => {
      toasts.value = toasts.value.filter((t) => t.id !== id);
      router.push("/giohang");
    };
    const handleCloseToast = (id) => {
      toasts.value = toasts.value.filter((t) => t.id !== id);
    };

    // ============= BI·∫æN TH·ªÇ S·∫¢N PH·∫®M CH√çNH =============
    const selectDefaultVariant = () => {
      const list = sanPham.value?.bienTheList || [];
      if (!list.length) {
        selectedVariant.value = null;
        return;
      }
      const cheapest = list.reduce((min, v) => {
        const giaThucTe = v.maKhuyenMai ? v.gia : v.giaKhongKhuyenMai;
        const giaMin = min.maKhuyenMai ? min.gia : min.giaKhongKhuyenMai;
        return giaThucTe < giaMin ? v : min;
      }, list[0]);
      (cheapest.thuocTinhList || []).forEach((tt) => {
        selectedValues[tt.tenThuocTinh] = tt.giaTriThuocTinh;
      });
      updateSelectedVariant();
    };

    const selectAttribute = (key, value) => {
      if (selectedValues[key] === value) {
        delete selectedValues[key];
      } else {
        selectedValues[key] = value;
      }
      updateSelectedVariant();
    };

    const isOptionAvailable = (key, value) => {
      const temp = { ...selectedValues, [key]: value };
      const list = sanPham.value?.bienTheList || [];
      return list.some((variant) =>
        Object.keys(temp).every((attrKey) =>
          (variant.thuocTinhList || []).some(
            (tt) => tt.tenThuocTinh === attrKey && tt.giaTriThuocTinh === temp[attrKey]
          )
        )
      );
    };

    const updateSelectedVariant = () => {
      const requiredKeys = Object.keys(attributes.value);
      const ok = requiredKeys.every((k) => selectedValues[k]);
      if (!ok) {
        selectedVariant.value = null;
        return;
      }
      const list = sanPham.value?.bienTheList || [];
      selectedVariant.value =
        list.find((bt) =>
          Object.entries(selectedValues).every(([k, v]) =>
            (bt.thuocTinhList || []).some(
              (tt) => tt.tenThuocTinh === k && tt.giaTriThuocTinh === v
            )
          )
        ) || null;

      if (selectedVariant.value) {
        mainImage.value = `/images/${sanPham.value.maSanPham}/${selectedVariant.value.maSKU}-1.png`;
        quantity.value = 1;
      }
    };

    const resetSelection = () => {
      Object.keys(selectedValues).forEach((k) => delete selectedValues[k]);
      selectedVariant.value = null;
      quantity.value = 1;
      const first = sanPham.value?.bienTheList?.[0];
      if (first) {
        mainImage.value = `/images/${sanPham.value.maSanPham}/${first.maSKU}-1.png`;
      }
    };

    const changeQuantity = (delta) => {
      if (!selectedVariant.value) return;
      const newQty = quantity.value + delta;
      if (newQty >= 1 && newQty <= selectedVariant.value.soLuong) {
        quantity.value = newQty;
      }
    };
    const changeImage = (src) => (mainImage.value = src);

    // ============= MUA H√ÄNG =============
    const buyNow = async () => {
      if (!selectedVariant.value) {
        alert("Vui l√≤ng ch·ªçn ƒë·∫ßy ƒë·ªß thu·ªôc t√≠nh s·∫£n ph·∫©m!");
        return;
      }
      if (selectedVariant.value.soLuong === 0) {
        alert("S·∫£n ph·∫©m n√†y ƒë√£ h·∫øt h√†ng.");
        return;
      }
      try {
        const bienTheDTO = { maSKU: selectedVariant.value.maSKU, soLuong: quantity.value };
        await addToCart(bienTheDTO);
        showSuccessToast();
        quantity.value = 1;
      } catch (error) {
        console.error("L·ªói th√™m v√†o gi·ªè h√†ng:", error);
        alert(`Th√™m v√†o gi·ªè h√†ng th·∫•t b·∫°i! ${error.response?.data || error.message}`);
      }
    };

    // üî• ============= MODAL PH·ª§ KI·ªÜN - PH·∫¶N B·ªî SUNG M·ªöI ============= üî•
    // ‚úÖ State cho modal ph·ª• ki·ªán
    const showPhuKienModal = ref(false);
    const selectedPhuKien = ref(null);
    const selectedPhuKienValues = reactive({});
    const selectedPhuKienVariant = ref(null);
    const phuKienQuantity = ref(1);
    const phuKienAttributes = ref({});

    // ‚úÖ M·ªü modal ph·ª• ki·ªán
    const openPhuKienModal = (pk) => {
  selectedPhuKien.value = pk;
  phuKienQuantity.value = 1;

  // Reset l·ª±a ch·ªçn tr∆∞·ªõc ƒë√≥
  for (const key in selectedPhuKienValues) delete selectedPhuKienValues[key];
  selectedPhuKienVariant.value = null;

  // Build danh s√°ch thu·ªôc t√≠nh t·ª´ c√°c bi·∫øn th·ªÉ
  const pkAttrMap = {};
  (pk.bienTheList || []).forEach((bt) => {
    (bt.thuocTinhList || []).forEach((tt) => {
      const key = tt.tenThuocTinh;
      const value = tt.giaTriThuocTinh;
      (pkAttrMap[key] ||= new Set()).add(value);
    });
  });
  phuKienAttributes.value = {};
  for (const key in pkAttrMap) {
    phuKienAttributes.value[key] = Array.from(pkAttrMap[key]);
  }

  // ‚úÖ T·ª± ƒë·ªông ch·ªçn bi·∫øn th·ªÉ c√≥ gi√° MIN
  if (pk.bienTheList && pk.bienTheList.length > 0) {
    const cheapest = pk.bienTheList.reduce((min, v) => {
      const pv = getAccessoryVariantPrice(v);
      const pm = getAccessoryVariantPrice(min);
      return pv < pm ? v : min;
    }, pk.bienTheList[0]);

    // Set bi·∫øn th·ªÉ ƒë∆∞·ª£c ch·ªçn + set gi√° tr·ªã thu·ªôc t√≠nh t∆∞∆°ng ·ª©ng
    selectedPhuKienVariant.value = cheapest;
    (cheapest.thuocTinhList || []).forEach((tt) => {
      selectedPhuKienValues[tt.tenThuocTinh] = tt.giaTriThuocTinh;
    });
  }

  showPhuKienModal.value = true;
};
    // const openPhuKienModal = (pk) => {
    //   console.log('üîç Opening accessory modal for:', pk);
    //   selectedPhuKien.value = pk;
    //   phuKienQuantity.value = 1;

    //   // Reset l·ª±a ch·ªçn tr∆∞·ªõc ƒë√≥
    //   for (const key in selectedPhuKienValues) delete selectedPhuKienValues[key];
    //   selectedPhuKienVariant.value = null;

    //   // Build danh s√°ch thu·ªôc t√≠nh t·ª´ c√°c bi·∫øn th·ªÉ
    //   const pkAttrMap = {};
    //   (pk.bienTheList || []).forEach((bt) => {
    //     (bt.thuocTinhList || []).forEach((tt) => {
    //       const key = tt.tenThuocTinh;
    //       const value = tt.giaTriThuocTinh;
    //       if (!pkAttrMap[key]) {
    //         pkAttrMap[key] = new Set();
    //       }
    //       pkAttrMap[key].add(value);
    //     });
    //   });
      
    //   // Convert Set th√†nh Array
    //   phuKienAttributes.value = {};
    //   for (const key in pkAttrMap) {
    //     phuKienAttributes.value[key] = Array.from(pkAttrMap[key]);
    //   }

    //   // T·ª± ƒë·ªông ch·ªçn n·∫øu ch·ªâ c√≥ 1 bi·∫øn th·ªÉ
    //   if (pk.bienTheList && pk.bienTheList.length === 1) {
    //     selectedPhuKienVariant.value = pk.bienTheList[0];
    //     (pk.bienTheList[0].thuocTinhList || []).forEach((tt) => {
    //       selectedPhuKienValues[tt.tenThuocTinh] = tt.giaTriThuocTinh;
    //     });
    //   }
      
    //   showPhuKienModal.value = true;
    // };

    

    // ‚úÖ ƒê√≥ng modal ph·ª• ki·ªán
    const closePhuKienModal = () => {
      showPhuKienModal.value = false;
      selectedPhuKien.value = null;
    };

    // ‚úÖ Ch·ªçn thu·ªôc t√≠nh ph·ª• ki·ªán
    const selectPhuKienAttribute = (key, value) => {
      selectedPhuKienValues[key] = value;
      updateSelectedPhuKienVariant();
    };

    // ‚úÖ C·∫≠p nh·∫≠t bi·∫øn th·ªÉ ph·ª• ki·ªán ƒë∆∞·ª£c ch·ªçn
    const updateSelectedPhuKienVariant = () => {
      if (!selectedPhuKien.value) return;
      
      const requiredKeys = Object.keys(phuKienAttributes.value);
      const selectedKeys = Object.keys(selectedPhuKienValues);
      
      // Ki·ªÉm tra ƒë√£ ch·ªçn ƒë·ªß thu·ªôc t√≠nh ch∆∞a
      if (selectedKeys.length < requiredKeys.length) {
        selectedPhuKienVariant.value = null;
        return;
      }

      // T√¨m bi·∫øn th·ªÉ ph√π h·ª£p
      selectedPhuKienVariant.value = (selectedPhuKien.value.bienTheList || []).find((bt) =>
        requiredKeys.every((key) => {
          const thuocTinhCuaBienThe = (bt.thuocTinhList || []).find(
            (tt) => tt.tenThuocTinh === key
          );
          return (
            thuocTinhCuaBienThe &&
            thuocTinhCuaBienThe.giaTriThuocTinh === selectedPhuKienValues[key]
          );
        })
      ) || null;
    };

    // ‚úÖ Thay ƒë·ªïi s·ªë l∆∞·ª£ng ph·ª• ki·ªán
    const changePhuKienQuantity = (delta) => {
      if (!selectedPhuKienVariant.value) return;
      const newQty = phuKienQuantity.value + delta;
      if (newQty >= 1 && newQty <= selectedPhuKienVariant.value.soLuong) {
        phuKienQuantity.value = newQty;
      }
    };

    // ‚úÖ Mua ph·ª• ki·ªán ngay
    const buyPhuKienNow = async () => {
      if (!selectedPhuKienVariant.value) {
        alert("Vui l√≤ng ch·ªçn ƒë·∫ßy ƒë·ªß thu·ªôc t√≠nh cho ph·ª• ki·ªán!");
        return;
      }
      
      if (selectedPhuKienVariant.value.soLuong === 0) {
        alert("Ph·ª• ki·ªán n√†y ƒë√£ h·∫øt h√†ng.");
        return;
      }

      try {
        const bienTheDTO = {
          maSKU: selectedPhuKienVariant.value.maSKUPhuKien,
          soLuong: phuKienQuantity.value,
        };
        
        await addToCart(bienTheDTO);
        closePhuKienModal();
        showSuccessToast();
        
        console.log('‚úÖ Accessory added to cart successfully');
      } catch (error) {
        console.error("‚ùå Error adding accessory to cart:", error);
        alert(`‚ùå Th√™m ph·ª• ki·ªán th·∫•t b·∫°i! ${error.response?.data || error.message}`);
      }
    };

    // ‚úÖ Watch modal state ƒë·ªÉ ch·∫∑n scroll
    watch(
      showPhuKienModal,
      (isModalOpen) => {
        // Ch·∫∑n scroll body khi modal m·ªü
        document.body.style.overflow = isModalOpen ? "hidden" : "";
      },
      { immediate: true }
    );
    // üî• ============= K·∫æT TH√öC PH·∫¶N B·ªî SUNG MODAL PH·ª§ KI·ªÜN ============= üî•

    // ============= GUARD CH·ªêNG RACE + RESET STATE =============
    const activeRequestId = ref(0);
    const resetState = () => {
      sanPham.value = null;
      Object.keys(selectedValues).forEach((k) => delete selectedValues[k]);
      selectedVariant.value = null;
      quantity.value = 1;
      mainImage.value = "https://placehold.co/400x300/e0e0e0/666666?text=Loading...";
      thumbnails.value = [];
      attributes.value = {};
      sanPhamLienQuan.value = [];
      currentPage.value = 0;
      feedbacks.value = [];
      visibleFeedbacksCount.value = initialFeedbackCount;
    };

    // ============= API CALLS =============
    // API: chi ti·∫øt theo productId
    const fetchSanPhamChiTiet = async (productId) => {
      if (!productId) return;
      resetState();

      const reqId = ++activeRequestId.value;
      try {
        const res = await axios.get(`http://localhost:8081/api/sanpham/${productId}`);
        if (reqId !== activeRequestId.value) return; // b·ªè k·∫øt qu·∫£ c≈© n·∫øu request m·ªõi ƒë√£ b·∫Øt ƒë·∫ßu

        sanPham.value = res.data || null;
        const list = sanPham.value?.bienTheList?.filter((bt) => bt.trangThai === 1) || [];
        sanPham.value.bienTheList = list;

        // Build attributes m·ªõi ho√†n to√†n
        const attrMap = {};
        list.forEach((bt) => {
          (bt.thuocTinhList || []).forEach((tt) => {
            const key = tt.tenThuocTinh;
            const val = tt.giaTriThuocTinh;
            (attrMap[key] ||= new Set()).add(val);
          });
        });
        attributes.value = {};
        for (const k in attrMap) attributes.value[k] = Array.from(attrMap[k]);

        // Thumbnails
        if (list.length) {
          thumbnails.value = list.map(
            (bt) => `/images/${sanPham.value.maSanPham}/${bt.maSKU}-1.png`
          );
          mainImage.value = thumbnails.value[0] || mainImage.value;
        } else {
          thumbnails.value = [];
          mainImage.value = `https://placehold.co/400x300/e0e0e0/666666?text=${sanPham.value?.tenSanPham || "Image"}`;
        }

        // Bi·∫øn th·ªÉ m·∫∑c ƒë·ªãnh
        selectDefaultVariant();

        // Feedback
        await fetchFeedbacksFor(productId);

        // S·∫£n ph·∫©m li√™n quan
        await loadSanPhamLienQuan(sanPham.value?.maSanPham);
      } catch (err) {
        console.error("L·ªói khi l·∫•y s·∫£n ph·∫©m:", err);
      }
    };

    // API: feedback theo productId
    const fetchFeedbacksFor = async (productId) => {
      try {
        const res = await axios.get(
          `http://localhost:8081/api/feedback/sanpham/${productId}`
        );
        feedbacks.value = Array.isArray(res.data) ? res.data : [];
      } catch (err) {
        console.error("L·ªói l·∫•y feedback:", err);
        feedbacks.value = [];
      }
    };

    // API: s·∫£n ph·∫©m li√™n quan
    const loadSanPhamLienQuan = async (productId) => {
      if (!productId) return;
      try {
        isLoadingSanPhamLienQuan.value = true;
        sanPhamLienQuanError.value = null;
        const data = await fetchSanPhamLienQuan(productId);
        sanPhamLienQuan.value = Array.isArray(data) ? data : [];
        currentPage.value = 0; // reset carousel
      } catch (error) {
        console.error("‚ùå Error loading related products:", error);
        sanPhamLienQuan.value = [];
        sanPhamLienQuanError.value = "Kh√¥ng t·∫£i ƒë∆∞·ª£c s·∫£n ph·∫©m li√™n quan.";
      } finally {
        isLoadingSanPhamLienQuan.value = false;
      }
    };

    // ============= WATCH ROUTE CHANGES =============
    watch(
      () => route.params.id,
      async (newId, oldId) => {
        if (!newId || newId === oldId) return;
        await fetchSanPhamChiTiet(newId);
      },
      { immediate: true } // l·∫ßn ƒë·∫ßu v√†o trang c≈©ng ch·∫°y
    );

    // ============= RETURN ALL REACTIVE DATA =============
    return {
      // Core
      sanPham,
      selectedValues,
      selectedVariant,
      quantity,
      mainImage,
      thumbnails,
      attributes,

      // Related products
      sanPhamLienQuan,
      isLoadingSanPhamLienQuan,
      sanPhamLienQuanError,
      currentPage,
      itemsPerPage,
      totalPages,
      paginatedProducts,
      carouselStyle,
      nextPage,
      prevPage,

      // Feedback
      feedbacks,
      newFeedback,
      averageRating,
      displayedFeedbacks,
      addFeedback,
      deleteFeedback,
      isMyFeedback,
      formatDate,
      initialFeedbackCount,
      visibleFeedbacksCount,
      loadMoreFeedbacks,
      collapseFeedbacks,

      // Toast
      showFeedbackSuccessToast,
      toasts,
      showSuccessToast,
      handleContinueShopping,
      handleViewCart,
      handleCloseToast,

      // Product variants & actions
      selectAttribute,
      isOptionAvailable,
      resetSelection,
      changeQuantity,
      changeImage,
      buyNow,
      selectDefaultVariant,

      // üî• ACCESSORY MODAL - PH·∫¶N B·ªî SUNG M·ªöI üî•
      showPhuKienModal,
      selectedPhuKien,
      selectedPhuKienValues,
      selectedPhuKienVariant,
      phuKienQuantity,
      phuKienAttributes,
      openPhuKienModal,
      closePhuKienModal,
      selectPhuKienAttribute,
      changePhuKienQuantity,
      buyPhuKienNow,
    };
  },
};
</script>

<style scoped>
/* ‚úÖ GLOBAL STYLES */
:global(body.modal-open) {
  overflow: hidden;
}

/* ‚úÖ HEADER STYLES */
.shopee-header {
  background-color: #ee4d2d;
}

.top-bar a, .top-bar span {
  transition: opacity 0.2s ease;
}

.top-bar a:hover {
  opacity: 0.8;
}

.search-form {
  max-width: 600px;
}

.user-avatar {
  width: 2rem;
  height: 2rem;
  object-fit: cover;
  border: 2px solid #fff;
  transition: border-color 0.2s ease;
}

.dropdown-toggle::after {
  vertical-align: middle;
}

.dropdown-item {
  transition: background-color 0.2s ease, color 0.2s ease;
}

.dropdown-item:hover {
  background-color: #f8f9fa;
  color: #ee4d2d;
}

.hover-link:hover {
  opacity: 0.8;
}

/* ‚úÖ PRODUCT STYLES */
.product-box {
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  padding: 2rem;
}

.main-image {
  width: 100%;
  max-width: 400px;
  height: auto;
  border-radius: 8px;
  margin-bottom: 1rem;
}

.thumbnail-img {
  width: 60px;
  height: 60px;
  object-fit: cover;
  border: 2px solid #ddd;
  border-radius: 4px;
  margin: 0 5px;
  cursor: pointer;
  transition: transform 0.2s, border-color 0.2s;
}

.thumbnail-img:hover,
.thumbnail-img.active {
  border-color: #ee4d2d;
  transform: scale(1.1);
}

.section-title {
  font-weight: bold;
  font-size: 1.1em;
  color: #555;
  margin-right: 0.5rem;
}

.thuoc-tinh-btn {
  background-color: #f0f0f0;
  border: 1px solid #ccc;
  padding: 0.5rem 1rem;
  border-radius: 4px;
  margin-right: 0.5rem;
  margin-bottom: 0.5rem;
  cursor: pointer;
  transition: background-color 0.2s ease, border-color 0.2s ease;
}

.thuoc-tinh-btn:hover {
  background-color: #e0e0e0;
}

.thuoc-tinh-btn.selected {
  background-color: #ee4d2d;
  color: #fff;
  border-color: #ee4d2d;
}

.thuoc-tinh-btn.readonly {
  background-color: #f8f8f8;
  color: #aaa;
  cursor: not-allowed;
  border-color: #ddd;
}

/* ‚úÖ PRICE STYLES */
.product-price-new {
  background-color: #f3f8fe;
  border-radius: 12px;
  padding: 16px;
  margin-bottom: 1.5rem;
}

.price-label-new {
  font-size: 14px;
  color: #555;
}

.price-values-new {
  display: flex;
  align-items: baseline;
  gap: 12px;
  margin-top: 4px;
}

.discounted-price-new {
  font-size: 28px;
  font-weight: 700;
  color: #d70018;
}

.original-price-new {
  font-size: 18px;
  color: #888;
  text-decoration: line-through;
}

.price-placeholder-new {
  color: #888;
}

/* ‚úÖ FEEDBACK STYLES */
.feedback-box {
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  padding: 2rem;
}

.rating-stars .star {
  font-size: 2rem;
  color: #ddd;
  cursor: pointer;
  transition: color 0.2s;
}

.rating-stars .star.active {
  color: #ffc107;
}

.feedback-item {
  padding: 1rem 0;
}

/* ‚úÖ FEEDBACK SUCCESS TOAST */
.feedback-success-toast {
  position: fixed;
  top: 20px;
  right: 20px;
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  display: flex;
  align-items: center;
  padding: 16px;
  z-index: 2000;
  overflow: hidden;
  border-left: 5px solid #28a745;
}

.feedback-success-toast .toast-icon {
  font-size: 24px;
  color: #28a745;
  margin-right: 16px;
}

.feedback-success-toast .toast-content h4 {
  margin: 0;
  font-size: 1rem;
  font-weight: 600;
  color: #333;
}

.feedback-success-toast .toast-content p {
  margin: 4px 0 0;
  font-size: 0.9rem;
  color: #666;
}

.feedback-success-toast .toast-timer {
  position: absolute;
  bottom: 0;
  left: 0;
  height: 4px;
  background: linear-gradient(90deg, #667eea, #764ba2, #4caf50);
  animation: countdown 5s linear forwards;
}

/* ‚úÖ ACCESSORY STYLES */
.phu-kien-box {
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  padding: 2rem;
  height: 100%;
}

.phu-kien-item-card {
  border: 1px solid #e0e0e0;
  border-radius: 8px;
  padding: 1rem;
  text-align: center;
  transition: transform 0.2s, box-shadow 0.2s;
  cursor: pointer;
  background-color: #ffffff;
  height: 100%;
}

.phu-kien-item-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.phu-kien-item-card .card-image {
  width: 100%;
  height: 150px;
  object-fit: cover;
  border-radius: 6px;
  margin-bottom: 0.75rem;
}

.phu-kien-item-card .card-title {
  font-size: 1.1rem;
  font-weight: 600;
  color: #333;
}

.phu-kien-item-card .card-price {
  font-size: 1rem;
  font-weight: 700;
  color: #d0011b;
}

/* ‚úÖ ACCESSORY MODAL */
.pk-modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
}

.pk-modal-container {
  width: 90%;
  max-width: 500px;
  background-color: #fff;
  border-radius: 12px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  overflow: hidden;
  animation: zoomIn 0.3s ease-out;
}

.pk-modal-content {
  display: flex;
  flex-direction: column;
}

.pk-modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 1.5rem;
  border-bottom: 1px solid #eee;
}

.pk-modal-title {
  font-size: 1.25rem;
  font-weight: 600;
}

.pk-close-btn {
  background: none;
  border: none;
  font-size: 1.5rem;
  color: #888;
  cursor: pointer;
  transition: color 0.2s;
}

.pk-close-btn:hover {
  color: #333;
}

.pk-modal-body {
  padding: 1.5rem;
}

.pk-info-card {
  display: flex;
  align-items: center;
  gap: 1rem;
  margin-bottom: 1.5rem;
  padding: 1rem;
  background-color: #f9f9f9;
  border-radius: 8px;
}

.pk-image {
  width: 80px;
  height: 80px;
  object-fit: cover;
  border-radius: 6px;
}

.pk-details {
  flex-grow: 1;
}

.pk-name {
  font-size: 1.1rem;
  font-weight: 600;
  margin-bottom: 0.25rem;
}

.pk-price {
  font-size: 1.2rem;
  font-weight: bold;
  color: #ee4d2d;
}

.pk-attributes-section {
  margin-bottom: 1.5rem;
}

.pk-attribute-group {
  margin-bottom: 1rem;
}

.pk-attribute-label {
  font-weight: 600;
  display: block;
  margin-bottom: 0.5rem;
}

.pk-attribute-options {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.pk-attribute-option {
  padding: 0.5rem 1rem;
  border: 1px solid #ccc;
  border-radius: 20px;
  background-color: #fff;
  cursor: pointer;
  transition: all 0.2s;
}

.pk-attribute-option:hover {
  border-color: #ee4d2d;
}

.pk-attribute-option.is-selected {
  background-color: #ee4d2d;
  color: #fff;
  border-color: #ee4d2d;
}

.pk-quantity-section {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.pk-quantity-label {
  font-weight: 600;
}

.pk-quantity-controls {
  display: flex;
  border: 1px solid #ccc;
  border-radius: 4px;
}

.pk-quantity-btn {
  background-color: #f0f0f0;
  border: none;
  padding: 0.25rem 0.75rem;
  cursor: pointer;
}

.pk-quantity-btn:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

.pk-quantity-display {
  width: 50px;
  text-align: center;
  border: none;
  background: #fff;
  font-weight: 500;
}

.pk-modal-footer {
  display: flex;
  justify-content: flex-end;
  gap: 1rem;
  padding: 1rem 1.5rem;
  border-top: 1px solid #eee;
}

.pk-btn-cancel,
.pk-btn-add-cart {
  padding: 0.75rem 1.5rem;
  border-radius: 6px;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.2s;
}

.pk-btn-cancel {
  background-color: #f0f0f0;
  color: #333;
  border: none;
}

.pk-btn-add-cart {
  background-color: #ee4d2d;
  color: #fff;
  border: none;
}

.pk-btn-add-cart:disabled {
  background-color: #ccc;
  cursor: not-allowed;
}

/* ‚úÖ FIXED TOAST SYSTEM - 100% Clickable */
.toast-container-fixed {
  position: fixed !important;
  top: 80px !important;
  right: 20px !important;
  display: flex !important;
  flex-direction: column !important;
  gap: 12px !important;
  z-index: 999999 !important; /* C·ª±c k·ª≥ cao */
  pointer-events: auto !important; /* Lu√¥n c√≥ th·ªÉ t∆∞∆°ng t√°c */
}

.add-to-cart-toast-fixed {
  display: flex !important;
  align-items: center !important;
  gap: 10px !important;
  background: #fff !important;
  border: 1px solid #ccc !important;
  padding: 12px 16px !important;
  border-radius: 8px !important;
  box-shadow: 0 4px 10px rgba(0,0,0,0.1) !important;
  min-width: 320px !important;
  animation: fadeInFixed 0.3s ease !important;
  position: relative !important;
  z-index: 999999 !important; /* C·ª±c k·ª≥ cao */
  pointer-events: auto !important; /* Lu√¥n c√≥ th·ªÉ t∆∞∆°ng t√°c */
}

.toast-icon-cart-fixed {
  color: #28a745 !important;
  font-size: 22px !important;
  pointer-events: auto !important;
}

.toast-content-fixed {
  flex-grow: 1 !important;
  pointer-events: auto !important;
}

.toast-title-cart-fixed {
  font-size: 16px !important;
  margin: 0 !important;
  font-weight: 600 !important;
  color: #333 !important;
  pointer-events: auto !important;
}

.toast-actions-fixed {
  display: flex !important;
  gap: 8px !important;
  margin-top: 6px !important;
  pointer-events: auto !important; /* Lu√¥n c√≥ th·ªÉ t∆∞∆°ng t√°c */
}

/* ‚úÖ N√öT TOAST - ƒê·∫£m b·∫£o 100% c√≥ th·ªÉ click */
.toast-btn-continue,
.toast-btn-cart {
  pointer-events: auto !important; /* Lu√¥n c√≥ th·ªÉ click */
  cursor: pointer !important; /* Lu√¥n hi·ªán con tr·ªè */
  z-index: 999999 !important; /* Z-index c·ª±c cao */
  position: relative !important;
  background-color: var(--bs-btn-bg) !important;
  border: var(--bs-btn-border-width) solid var(--bs-btn-border-color) !important;
  color: var(--bs-btn-color) !important;
  padding: 0.25rem 0.5rem !important;
  font-size: 0.875rem !important;
  border-radius: 0.375rem !important;
  text-decoration: none !important;
  transition: all 0.15s ease-in-out !important;
}

.toast-btn-continue:hover,
.toast-btn-cart:hover {
  transform: translateY(-1px) !important;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1) !important;
}

.toast-btn-continue:active,
.toast-btn-cart:active {
  transform: translateY(0) !important;
  box-shadow: 0 1px 2px rgba(0,0,0,0.1) !important;
}

.toast-close-btn-fixed {
  background: transparent !important;
  border: none !important;
  font-size: 20px !important;
  cursor: pointer !important;
  color: #666 !important;
  position: absolute !important;
  top: 8px !important;
  right: 8px !important;
  width: 24px !important;
  height: 24px !important;
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  pointer-events: auto !important; /* Lu√¥n c√≥ th·ªÉ click */
  z-index: 999999 !important; /* Z-index c·ª±c cao */
}

.toast-close-btn-fixed:hover {
  color: #333 !important;
  background-color: #f0f0f0 !important;
  border-radius: 50% !important;
}

.toast-timer-bar-fixed {
  position: absolute !important;
  bottom: 0 !important;
  left: 0 !important;
  height: 3px !important;
  width: 100% !important;
  background: #007bff !important;
  animation: timerFixed 8s linear forwards !important;
  pointer-events: none !important; /* Timer kh√¥ng c·∫ßn click */
}

/* ‚úÖ RELATED PRODUCTS CAROUSEL SECTION */

/* Container cho section s·∫£n ph·∫©m li√™n quan */
.related-products-section {
  margin-top: 2rem;
  padding: 1.5rem;
  background-color: #f8f9fa;
  border-radius: 12px;
}

/* ‚úÖ Section Header v·ªõi Controls */
.section-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.section-title {
  font-size: 1.5rem;
  font-weight: 600;
  color: #2c3e50;
  border-bottom: 2px solid #ee4d2d;
  padding-bottom: 0.5rem;
  display: inline-block;
  margin-bottom: 0;
}

/* ‚úÖ Carousel Controls */
.carousel-controls {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.carousel-btn {
  width: 40px;
  height: 40px;
  border: 2px solid #ee4d2d;
  background: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.3s ease;
  font-size: 1.2rem;
  color: #ee4d2d;
}

.carousel-btn:hover:not(.disabled) {
  background: #ee4d2d;
  color: white;
  transform: scale(1.05);
}

.carousel-btn.disabled {
  border-color: #ddd;
  color: #ddd;
  cursor: not-allowed;
  opacity: 0.5;
}

.page-indicator {
  display: flex;
  align-items: center;
  gap: 0.25rem;
  font-weight: 600;
  color: #2c3e50;
  font-size: 1rem;
}

.current-page {
  color: #ee4d2d;
  font-size: 1.1rem;
}

.separator {
  color: #999;
}

.total-pages {
  color: #666;
}

/* ‚úÖ Carousel Container */
.products-carousel-container {
  overflow: hidden;
  border-radius: 8px;
}

.products-carousel {
  display: flex;
  width: 100%;
  transition: transform 0.3s ease-in-out;
}

.carousel-page {
  min-width: 100%;
  flex-shrink: 0;
}

/* ‚úÖ Product Grid - 4 c·ªôt c·ªë ƒë·ªãnh */
.product-grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 1rem;
}

/* ‚úÖ Product Card - G·ªçn g√†ng, th·∫•p h∆°n */
.product-card {
  display: flex;
  flex-direction: column;
  background: #fff;
  border-radius: 12px;
  box-shadow: 0 3px 12px rgba(0,0,0,0.08);
  padding: 0.75rem; /* Padding nh·ªè h∆°n */
  text-decoration: none;
  color: inherit;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  position: relative;
  border: 1px solid #f0f0f0;
}

.product-card:hover {
  transform: translateY(-4px); /* Hover nh·∫π h∆°n */
  box-shadow: 0 8px 20px rgba(0,0,0,0.12);
  text-decoration: none;
  color: inherit;
  border-color: #ee4d2d;
}

/* ‚úÖ Product Image - Th·∫•p h∆°n, g·ªçn h∆°n */
.product-image {
  position: relative;
  width: 100%;
  padding-top: 75%; /* T·ª∑ l·ªá th·∫•p h∆°n thay v√¨ 100% */
  overflow: hidden;
  border-radius: 8px;
  margin-bottom: 0.5rem; /* Margin nh·ªè h∆°n */
  background: #f8f9fa;
}

.product-image img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform 0.3s ease;
}

.product-card:hover .product-image img {
  transform: scale(1.05);
}

/* ‚úÖ Product Info - Compact, g·ªçn g√†ng */
.product-name {
  font-size: 0.9rem; /* Font nh·ªè h∆°n */
  font-weight: 600;
  color: #2c3e50;
  margin-bottom: 0.25rem; /* Margin r·∫•t nh·ªè */
  line-height: 1.3;
  display: -webkit-box;
  
  overflow: hidden;
  min-height: 2.3rem; /* Chi·ªÅu cao t·ªëi thi·ªÉu nh·ªè h∆°n */
}

.product-desc {
  font-size: 0.75rem; /* Font r·∫•t nh·ªè */
  color: #666;
  margin-bottom: 0.25rem;
  line-height: 1.3;
  display: -webkit-box;
  
  overflow: hidden;
}

.product-price {
  font-size: 1rem; /* Font v·ª´a ph·∫£i */
  font-weight: bold;
  color: #e53935;
  margin: 0.25rem 0; /* Margin r·∫•t nh·ªè */
}

.product-category {
  font-size: 0.75rem; /* Font nh·ªè */
  color: #666;
  margin-bottom: 0.25rem;
  font-weight: 500;
}

/* ‚úÖ Discount Badge - Nh·ªè g·ªçn */
.discount-badge {
  position: absolute;
  top: 0.5rem;
  left: 0.5rem;
  background: linear-gradient(135deg, #d0011b, #b80012);
  color: #fff;
  font-size: 0.7rem; /* Font nh·ªè h∆°n */
  font-weight: bold;
  padding: 0.25rem 0.5rem; /* Padding nh·ªè h∆°n */
  border-radius: 6px;
  z-index: 10;
  box-shadow: 0 2px 6px rgba(208, 1, 27, 0.3);
}

/* ‚úÖ Text "Xem chi ti·∫øt" nh·ªè g·ªçn */
.text-muted.small {
  font-size: 0.75rem !important;
  font-weight: 500;
  color: #666 !important;
  text-align: center;
  margin-top: 0.25rem;
}

/* ‚úÖ ANIMATIONS */
@keyframes fadeInFixed {
  from { 
    opacity: 0; 
    transform: translateX(30px); 
  }
  to { 
    opacity: 1; 
    transform: translateX(0); 
  }
}

@keyframes timerFixed {
  from { width: 100%; }
  to { width: 0; }
}

@keyframes countdown {
  from { width: 100%; }
  to { width: 0%; }
}

@keyframes zoomIn {
  from {
    transform: scale(0.8);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

/* ‚úÖ RESPONSIVE DESIGN */
@media (max-width: 1200px) {
  .product-grid {
    grid-template-columns: repeat(3, 1fr); /* 3 c·ªôt tr√™n tablet l·ªõn */
    gap: 1rem;
  }
}

@media (max-width: 768px) {
  .toast-container-fixed {
    right: 10px !important;
    left: 10px !important;
    top: 60px !important;
  }
  
  .add-to-cart-toast-fixed {
    min-width: auto !important;
    max-width: 100% !important;
  }
  
  .toast-actions-fixed {
    flex-direction: column !important;
    gap: 4px !important;
  }
  
  .toast-btn-continue,
  .toast-btn-cart {
    width: 100% !important;
    text-align: center !important;
  }

  .section-header {
    flex-direction: column;
    gap: 1rem;
    align-items: flex-start;
  }
  
  .product-grid {
    grid-template-columns: repeat(2, 1fr); /* 2 c·ªôt tr√™n tablet */
    gap: 0.75rem;
  }
  
  .carousel-controls {
    align-self: flex-end;
  }

  .related-products-section {
    padding: 1rem;
    margin-top: 1.5rem;
  }
  
  .section-title {
    font-size: 1.3rem;
  }
  
  .product-card {
    padding: 0.5rem;
  }
  
  .product-image {
    padding-top: 80%; /* T·ª∑ l·ªá h∆°i cao h∆°n tr√™n mobile */
  }
}

@media (max-width: 576px) {
  .product-grid {
    grid-template-columns: 1fr; /* 1 c·ªôt tr√™n mobile */
    gap: 1rem;
  }
  
  .product-card {
    padding: 1rem;
    border-radius: 12px;
  }
  
  .product-image {
    border-radius: 10px;
  }

  .carousel-btn {
    width: 35px;
    height: 35px;
    font-size: 1rem;
  }
}

/* ‚úÖ Offcanvas r·ªông 40% m√†n h√¨nh */
.offcanvas.offcanvas-40 {
  width: 40% !important;
  max-width: none; /* tr√°nh b·ªã gi·ªõi h·∫°n max-width m·∫∑c ƒë·ªãnh */
}
</style>